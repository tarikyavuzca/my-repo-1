AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template creates an ASG behind an ALB

Parameters:

  pVpcId:
    Description: VPC for Autoscaling
    Type: AWS::EC2::VPC::Id

  pSubnets:
    Description: Subnets where ALB can send traffic
    Type: List<AWS::EC2::Subnet::Id>

Resources:
  rSecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      GroupName: SSHandHTTP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref pVpcId

  rALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ALBforASG
      Scheme: internet-facing
      SecurityGroups:
      - !GetAtt rSecGrp.GroupId
      Subnets: !Ref pSubnets
      Type: application

  rListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
      - TargetGroupArn: !Ref rTargetGroup
        Type: forward

      LoadBalancerArn: !Ref rALB
      Port: 80
      Protocol: HTTP

  rTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: TargetGroupForASG
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref pVpcId

  rLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0b5eea76982371e91
        InstanceType: t2.micro
        KeyName: firstkey
        SecurityGroupIds:
          - !GetAtt rSecGrp.GroupId
        UserData: !Base64 |
          #! /bin/bash -x
          yum update -y
          amazon-linux-extras install epel -y
          yum install -y stress
          yum install -y httpd
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4`
          DATE_TIME=`date`
          chmod -R 777 /var/www/html
          echo "<html>
          <head>
              <title> Congratulations! You have created an instance from Launch Template</title>
          </head>
          <body>
              <h1>This web server is launched from launch template by YTD</h1>
              <p>This instance is created at <b>$DATE_TIME</b></p>
              <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
              <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
          </body>
          </html>" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd
      LaunchTemplateName: LaunchTemplateForASG
      # TagSpecifications:
      # - ResourceType: instance
      #   Tags:
      #     - Key: Name
      #       Value: YTD-ASG-Server
      
  rAutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: "1"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref rLaunchTemplate
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs:
      - !Ref rTargetGroup
      VPCZoneIdentifier: !Ref pSubnets
  rAutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref rAutoscalingGroup
      EstimatedInstanceWarmup: 90
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification: 
           PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0
      
# Outputs:
