AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Roman Numerals Converter Application. This template creates Python Flask Web Application on Amazon Linux 2 (ami-0947d2ba12ee1ff75) EC2 Instance with custom security group allowing http connections on port 80.
  Roman Numerals Converter Application is downloaded from Github repository, then installed on Flask.
Parameters:


  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must one of the existing EC2 KeyPair

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for Flask Web Server #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp #required
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  WebServerHost:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds: 
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName} Stack 
      UserData: !Base64 |
          #! /bin/bash
          yum update -y
          yum install python3 -y
          pip3 install flask
          yum install git -y
          cd /home/ec2-user
          wget -P templates https://raw.githubusercontent.com/tarikyavuzca/my-repo-1/main/Project-001-Roman-Numerals-Converter/templates/index.html
          wget -P templates https://raw.githubusercontent.com/tarikyavuzca/my-repo-1/main/Project-001-Roman-Numerals-Converter/templates/result.html
          wget https://raw.githubusercontent.com/tarikyavuzca/my-repo-1/main/Project-001-Roman-Numerals-Converter/app.py
          python3 app.py
# Outputs: 
#   WebsiteURL:
#     Value: !Sub
#       - http://${PublicAddress}
#       - PublicAddress: !GetAtt WebServerHost.PublicDnsName
#     Description: Roman Numerals Converter Application URL